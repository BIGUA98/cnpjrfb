<?php
/**
 * System generated by SysGen (System Generator with Formdin Framework) 
 * Download SysGenAd: https://github.com/bjverde/sysgenad
 * Download Formdin5 Framework: https://github.com/bjverde/formDin5
 * 
 * SysGen  Version: 0.6.0
 * FormDin Version: 5.0.0
 * 
 * System cnpjrfb2 created in: 2021-11-20 00:51:44
 */

class empresaForm extends TPage
{

    protected $form; //Registration form Adianti
    protected $frm;  //Registration component FormDin 5
    protected $datagrid; //Listing
    protected $pageNavigation;

    // trait com onReload, onSearch, onDelete, onClear, onEdit, show
    use Adianti\Base\AdiantiStandardFormTrait;
    // trait com onReload, onSearch, onDelete...
    use Adianti\Base\AdiantiStandardListTrait;

    public function __construct()
    {
        parent::__construct();
        // $this->adianti_target_container = 'adianti_right_panel';

        $this->setDatabase('maindatabase'); // define the database
        $this->setActiveRecord('empresa'); // define the Active Record
        $this->setDefaultOrder('CNPJ_BASICO', 'asc'); // define the default order

        $primaryKey = 'CNPJ_BASICO';
        $this->frm = new TFormDin($this,'empresa');
        $frm = $this->frm;
        $frm->enableCSRFProtection(); // Protection cross-site request forgery 
        $frm->addHiddenField( $primaryKey );   // coluna chave da tabela
        $frm->addTextField('CNPJ_BASICO', 'Cnpj Basico',8,true,8);
        $frm->addMemoField('RAZAO_SOCIAL', 'Razao Social',1000,false,80,3);
        //$frm->getLabel('RAZAO_SOCIAL')->setToolTip('NOME EMPRESARIAL DA PESSOA JURÍDICA');
        $controllerNatju = new NatjuController();
        $listNatju = $controllerNatju->selectAll();
        $frm->addSelectField('NATUREZA_JURIDICA', 'Natureza Juridica',false,$listNatju,null,null,null,null,null,null,' ',null);
        //$frm->getLabel('NATUREZA_JURIDICA')->setToolTip('CÓDIGO DA NATUREZA JURÍDICA');
        $controllerQuals = new QualsController();
        $listQuals = $controllerQuals->selectAll();
        $frm->addSelectField('QUALIFICACAO_RESPONSAVEL', 'Qualificação Responsavel',false,$listQuals,null,null,null,null,null,null,' ',null);
        //$frm->getLabel('QUALIFICACAO_RESPONSAVEL')->setToolTip('QUALIFICAÇÃO DA PESSOA FÍSICA RESPONSÁVEL PELA EMPRESA');
        $frm->addTextField('CAPITAL_SOCIAL', 'Capital Social',45,false,45);
        //$frm->getLabel('CAPITAL_SOCIAL')->setToolTip('CAPITAL SOCIAL DA EMPRESA');
        $frm->addTextField('PORTE_EMPRESA', 'Porte Empresa',45,false,45);
        $frm->addTextField('ENTE_FEDERATIVO_RESPONSAVEL', 'Ente Federativo Responsavel',45,false,45);
        //$frm->getLabel('ENTE_FEDERATIVO_RESPONSAVEL')->setToolTip('O ENTE FEDERATIVO RESPONSÁVEL É PREENCHIDO PARA OS CASOS DE ÓRGÃOS E ENTIDADES DO GRUPO DE NATUREZA JURÍDICA 1XXX. PARA AS DEMAIS NATUREZAS, ESTE ATRIBUTO FICA EM BRANCO');

        // O Adianti permite a Internacionalização - A função _t('string') serve
        //para traduzir termos no sistema. Veja ApplicationTranslator escrevendo
        //primeiro em ingles e depois traduzindo
        $frm->setAction( _t('Save'), 'onSave', null, 'fa:save', 'green' );
        $frm->setActionLink( _t('Clear'), 'onClear', null, 'fa:eraser', 'red');

        $this->form = $frm->show();
        $this->form->setData( TSession::getValue(__CLASS__.'_filter_data'));

        $mixUpdateFields = $primaryKey.'|'.$primaryKey
                        .',CNPJ_BASICO|CNPJ_BASICO'
                        .',RAZAO_SOCIAL|RAZAO_SOCIAL'
                        .',NATUREZA_JURIDICA|NATUREZA_JURIDICA'
                        .',QUALIFICACAO_RESPONSAVEL|QUALIFICACAO_RESPONSAVEL'
                        .',CAPITAL_SOCIAL|CAPITAL_SOCIAL'
                        .',PORTE_EMPRESA|PORTE_EMPRESA'
                        .',ENTE_FEDERATIVO_RESPONSAVEL|ENTE_FEDERATIVO_RESPONSAVEL'
                        ;
        $grid = new TFormDinGrid($this,'gd','Data Grid');
        $grid->setUpdateFields($mixUpdateFields);
        $grid->addColumn($primaryKey,'id');
        $grid->addColumn('CNPJ_BASICO','Cnpj Basico');
        $grid->addColumn('RAZAO_SOCIAL','Razao Social');
        $grid->addColumn('NATUREZA_JURIDICA','Natureza Juridica');
        $grid->addColumn('QUALIFICACAO_RESPONSAVEL','Qualificação Responsavel');
        $grid->addColumn('CAPITAL_SOCIAL','Capital Social');
        $grid->addColumn('PORTE_EMPRESA','Porte Empresa');
        $grid->addColumn('ENTE_FEDERATIVO_RESPONSAVEL','Ente Federativo Responsavel');

        $this->datagrid = $grid->show();
        $this->pageNavigation = $grid->getPageNavigation();
        $panelGroupGrid = $grid->getPanelGroupGrid();


        // creates the page structure using a table
        $formDinBreadCrumb = new TFormDinBreadCrumb(__CLASS__);
        $vbox = $formDinBreadCrumb->getAdiantiObj();
        $vbox->add($this->form);
        $vbox->add($panelGroupGrid);

        // add the table inside the page
        parent::add($vbox);
    }

    //--------------------------------------------------------------------------------
    /**
     * Close right panel
     */
     /*
    public function onClose()
    {
        TScript::create("Template.closeRightPanel()");
    } //END onClose
     */

    //--------------------------------------------------------------------------------
    public function onSave($param)
    {
        $data = $this->form->getData();
        //Função do FormDin para Debug
        FormDinHelper::d($param,'$param');
        FormDinHelper::debug($data,'$data');
        FormDinHelper::debug($_REQUEST,'$_REQUEST');

        try{
            $this->form->validate();
            $this->form->setData($data);
            $vo = new EmpresaVO();
            $this->frm->setVo( $vo ,$data ,$param );
            $controller = new EmpresaController();
            $resultado = $controller->save( $vo );
            if( is_int($resultado) && $resultado!=0 ) {
                //$text = TFormDinMessage::messageTransform($text); //Tranform Array in Msg Adianti
                $this->onReload();
                $this->frm->addMessage( _t('Record saved') );
                //$this->frm->clearFields();
            }else{
                $this->frm->addMessage($resultado);
            }
        }catch (Exception $e){
            new TMessage(TFormDinMessage::TYPE_ERROR, $e->getMessage());
        } //END TryCatch
    } //END onSave

}